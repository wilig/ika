// Simple variable declaration
big_int : u64

// Simple untyped assignment
int_assignment := 10
string_assignment := "This is a string!"
bool_assignment := true
float_assignment := 100.5
returning := false
truenough := 100

// Simple typed assignment
typed_assignment : u64 = 10 * 1200


// Precedence
simple_multiplication := 10 * 5 * 3 * 8 * 2
simple_multiplication_and_division := 10 * 5 / 8 * 27 / 2
simple_subtraction := 10 - 5 - 3 - 2
simple_precedence := 10 - 5 * 3 - 2
simple_precedence_with_parens := (10 - 5) * 3 / 2 + 50 / 4
single_expression := (100 + 100)

// Expressions with identifiers
{
    x:= 5

    fourtyfive := 4 * x
}

// This defines an inner scope
{
    let my_const := 45
    another_var : u32 = 100
}

// If statement single block
if (false) {
  let t := true
}

// If statement with else block
if (10 + 1 == 11) {
  let bang := 100
} else {
  boom := 50
}

// Simple function that returns void
fn nothing() {
  i_do_nothing := 1
}

// Simple function that returns an int
fn double(x: u64): u64 {
  return x * 2
}

fn multiply(x: u16, y: u16, z: u64): u32 {
  return x * y
}


a_simple_assignment_at_the_end := 1000
